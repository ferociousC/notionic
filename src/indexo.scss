$content-width: 1450px;
$views: 3;
$largest-view: 1320px;
$view-multiplier: ( $largest-view / ( $views - 1) );
$font-family: 'Open Sans', sans-serif;

@function deep-get($map, $keys...) {
    @each $key in $keys {
        $map: map-get($map, $key);
    }
    @return $map;
}


$arch-depth-abstract: (
  ('*'),
  (''), // total - html, body
  (''), // block - header, footer, main, div
  ('p', 'h1', 'h2', 'button', 'input')
);

$arch-depth-general: (
  ('field--head', 'field--body'),
  ('content--outer'),
  ('content--inner'),
  ('content', 'content--part', 'content--split', 'content--text', 'content--angle--down', 'control', 'control--box--split'),
  ('content--image', '', 'button', 'button--hover--topleft')
);

$arch-depth-morphing-abstract: (
  ('body')
);

$arch-depth-morphing-general: (

);


$arch-abstract-map: (
  html: (
  
  ),
  body: (

  ),
  header: (

  ),
  main: (),
  footer: (),

);

$arch-property-values: (
        ('padding', 0 0 0 0),
        ('margin', 0, 'auto'),
        ('color', $white),
        ('background', 'none'),
        ('width', ''),
        ('height', ''),
        ('font-family', ''), 
        ('font-size', '')
);



$arch-values: (
        
);

@for $i from 1 through length($arch-depth-abstract) {
  @for $j from 1 through length(nth($arch-depth-abstract, $h)) {
    
    #{nth(nth($arch-depth-abstract, $i), $j))} {
      
      @for $k from 1 through length($arch-abstract-map) {
        @for $l from 1 through length(nth($arch-abstract-property-values, $k)){
            
          
        }
      }
    }

  }
}

@for $i from 1 through length($arch-depth-general) {
  @for $j from 2 through length(nth($arch-depth-general, $h)) {
    @for $k from 1 through length($arch-property-values) {
      @for $l from 2 through length(nth($arch-property-values, $k)){

      }
    }
  }
}

@for $i from 1 through length($arch-depth-exact) {
  @for $j from 2 through length(nth($arch-depth-exact, $h)) {
    @for $k from 1 through length($arch-property-values) {
      @for $l from 2 through length(nth($arch-property-values, $k)){

      }
    }
  }
}

          }
        }
      }
  
    } 
  }
}

//background
background: transparent;
background-color: rgba(210, 170, 0, 0.94);
background-image: linear-gradient(55deg, $yellow, $green)

//display
overflow: visible;
position: relative;
display: flex;

//display special
flex-wrap: wrap;
-webkit-flex-basis: auto;
flex-basis: auto;
justify-content: space-between;
box-sizing: border-box;

//spacing
margin: 0;
padding: 0;
border: none;
  border-radius: 0;

//sizing
width: $content-width;
height: $content-height;
max-width: $content-width;
max-height: $content-height;

//typography
font: inherit;
font-family: $font-family;
font-size: 14px;
font-weight: 400;  
color: $black;
line-height: $default-line-height;
text-transform: uppercase;
text-align: center;

//special
content: '';
right: 9px;
left: 9px;
top: 9px;
bottom: 9px;























@for $i from 1 through $views {
  @media only screen and (min-width: ($i - 1)*$view-multiplier) {
        
        $gutter: ($i - 1 ) * 5px;
        $text-gutter: (10 + ($i * 5)) + px;
        $vertical-gutter: 14 + (( $i - 1 ) * 14) + px;
        body {
          $col: 192 + 16 * $i;
          background: rgba($col, $col, $col, 1);
          padding: 0 (( $i - 1 ) * ( 12.5% / 2 ));
        }

        .field--head {
          padding: $vertical-gutter $gutter;
        }
        
        main{
          padding: 0 $gutter;
          margin: 0 auto $gutter;
          width: (100 / $i) + % ;
        }

        .content--text {
          padding: 0 $text-gutter;
        }
      }
}


